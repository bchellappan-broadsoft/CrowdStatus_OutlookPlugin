<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        q+crq+crrOgaYYEAAAATE2IiIskiIsoiIsoiIsoiIsoiIsoiIsoiIsoiIsoiIsoiIsoiIsoiIsoiIsoj
        I8spKaUODiYFCQoqaIUrq+UhqugiqugiqugiqugiqugiqugiqugiqugiqucTUGwAAAAPD0kfH8MeHsce
        HsceHsceHsceHsceHsceHsceHsceHsceHsceHsceHsceHsceHscfH8clJaENDSUGCgspaYUnqOEepuMf
        p+Ifp+Ifp+Ifp+Ifp+Ifp+MhpN8OOEoAAAAJCSsbG7UaGsQaGsQaGsQaGsQaGsQaGsQaGsQaGsQaGsQa
        GsQaGsQaGsQaGsQaGsQaGsQbG8QiIpwMDCIGCgsnaYUio9sZotwaotwaotwaotwaotwZotwdlMcIGyQA
        AAAEBA4ZGZcWFsEWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAWFsAYGMEg
        IJgLCyAGCwwlZ4McntQTnNQUndQUndQUndQVndUYcJQCBQYAAAAAAAATE2MVFb4TE74TE74TE74TE74T
        E74TE74TE74TE74TE74TE74TE74TE74TE74TE74TE74SEr4UFL4eHpULCh8GDA0jZ4IXms0OmM0PmM0O
        mM0Wl8oQOEgAAAAAAAAAAAAKCicXF60PD7wQELwQELwQELwQELwQELwQELwQELwQELwQELwQELwQELwQ
        ELwQELwQELwQELwPD7wREbwbG5IKCR0GDA0gZoASlsgJk8cLlMgZcJEECgwAAAAAAAAAAAABAQMXF3AQ
        ELoMDLkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkNDbkMDLkPD7oZGY4J
        CBsGDQ4eZoAPk8QWiLIOJjAAAAAAAAAAAAAAAAAAAAAKCh8aGp4KCrcKCrcKCrcKCrcKCrcKCrcKCrcK
        CrcKCrcKCrcKCrcKCrcKCrcKCrcKCrcKCrcKCrcJCbcMDLcXF4sICBkHDhAjZHsXP04AAAAAAAAAAAAA
        AAAAAAAAAAAAAAATE0IWFq4HB7UHB7UICLUICLUICLUICLUICLUICLUICLUICLUICLUICLUICLUICLUI
        CLUICLUICLUHB7UKCrUWFogICBkEBgYCAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgMZGVYVFbEFBbMG
        BrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMICLQZGYEEBAsA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwUbG1QaGqwHB7QFBbMGBrMGBrMGBrMGBrMGBrMGBrMG
        BrMGBrMGBrMGBrMGBrMGBrMGBrMFBbMHB7QZGa4bG1oCAgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAgIXFz0iIpoPD7UFBbMFBbMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMGBrMFBbMFBbMPD7Ui
        Ip0ZGUECAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDRkjI2UjI6MTE7UI
        CLQFBbMEBLMFBbMFBbMFBbMEBLMFBbMICLQSErYjI6UkJGkNDRsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIPDxwiIlMqKoQmJqEgIK4aGrMXF7YbG7QfH64mJqEq
        KoUjI1UQEB4CAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAFBQYQEBkcHDAlJUYoKFAmJkccHDERERsGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//J///8CB//8AgH/8AIA/+ACAH/AAgA/gAIAHwACAA8AAgAOAAIADgACAAQAA
        gAEAAIABAACAAQAAgAEAAIABAAAAAQAAAAEAAAABAAAAAQAAAAGAAAADgAAAA4AAAAfAAAAP4AAAD+AA
        AB/wAAAf+AAAP/4AAP//AAH//+AP/w==
</value>
  </data>
</root>